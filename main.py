from config import TOKEN
import keyboard as kb
from aiogram import Bot, types
from aiogram.utils import executor
from aiogram.dispatcher import Dispatcher
from aiogram.types.message import ContentType, ParseMode
from aiogram.utils.markdown import text, bold, italic
import json

students = {}

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)



@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    global students
    user_id = message.from_user.id
    if user_id not in students:
        students[user_id] = {
            'user_id': user_id,
            'flag_add_name': True
        }
    await bot.send_message(user_id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ —á–∞—Ç-–±–æ—Ç–µ "–ü—Ä–æ–≤–∏–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–ª–µ–¥–∂–∞"! –ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?')

@dp.message_handler()
async def name_message(message: types.Message):
    global students
    user_id = message.from_user.id
    student = students[user_id]
    if student['flag_add_name']:
        student['flag_add_name'] = False
        student['name'] = message.text.capitalize()
        await bot.send_message(user_id, '–†–∞–¥ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, ' + student['name'] + '! üòä \n–ò–∑ –∫–∞–∫–æ–≥–æ –í—ã –∫–ª–∞—Å—Å–∞?', reply_markup=kb.klassi)
        print(student)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('intex'))
async def process_way_command(callback_query: types.CallbackQuery):
    await bot.send_message(callback_query.from_user.id, '–ß—Ç–æ –±—ã –í—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?',  reply_markup=kb.intex)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('ek'))
async def process_way_command(callback_query: types.CallbackQuery):
    await bot.send_message(callback_query.from_user.id, "üîí –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –µ—â—ë –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ ‚òπ")

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('en'))
async def process_way_command(callback_query: types.CallbackQuery):
    await bot.send_message(callback_query.from_user.id, "üîí –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –µ—â—ë –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ ‚òπ")

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('gum'))
async def process_way_command(callback_query: types.CallbackQuery):
    await bot.send_message(callback_query.from_user.id, "üîí –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –µ—â—ë –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ ‚òπ")

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('socgum'))
async def process_way_command(callback_query: types.CallbackQuery):
    await bot.send_message(callback_query.from_user.id, "üîí –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –µ—â—ë –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ ‚òπ")

@dp.message_handler(lambda message: message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–ª–∞—Å—Å–∞")
async def process_class_command_3(message: types.Message):
    await bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π –∫–ª–∞—Å—Å:", reply_markup=kb.klassi)

#–†–ê–°–ü–ò–°–ê–ù–ò–ï_–ò–ù–¢–ï–•
@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iRaspis'))
async def process_week(callback_query: types.CallbackQuery):
    with open('kalendar_21-22.pdf', 'rb') as cz:
        txt = 'P.S. –ï—Å–ª–∏ –Ω–µ –ø–æ–º–Ω–∏—Ç–µ –∫–∞–∫–∞—è —Å–µ–π—á–∞—Å –Ω–µ–¥–µ–ª—è, —Ç–æ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ç—É—Ç!'
        await bot.send_message(callback_query.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏üëá", reply_markup=kb.week)
        await bot.send_document(callback_query.from_user.id, cz, caption=txt)


#–î–ù–ò–ù–ï–î–ï–õ–ò_–ò–ù–¢–ï–•
@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iMon'))
async def process_iMon(callback_query: types.CallbackQuery):
    mon = open("table/mon.png", 'rb')
    txt = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:'
    await bot.send_photo(callback_query.from_user.id, mon, caption=txt)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iTue'))
async def process_iTue(callback_query: types.CallbackQuery):
    tue = open("table/tue.png", 'rb')
    txt = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫:'
    await bot.send_photo(callback_query.from_user.id, tue, caption=txt)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iWed'))
async def process_iWed(callback_query: types.CallbackQuery):
    tue = open("table/wed.png", 'rb')
    txt = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—Ä–µ–¥—É:'
    await bot.send_photo(callback_query.from_user.id, tue, caption=txt)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iThu'))
async def process_iThu(callback_query: types.CallbackQuery):
    tue = open("table/thu.png", 'rb')
    txt = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —á–µ–≤–µ—Ä–≥:'
    await bot.send_photo(callback_query.from_user.id, tue, caption=txt)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iFri'))
async def process_iFri(callback_query: types.CallbackQuery):
    tue = open("table/fri.png", 'rb')
    txt = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—è—Ç–Ω–∏—Ü—É:'
    await bot.send_photo(callback_query.from_user.id, tue, caption=txt)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iSat'))
async def process_iSat(callback_query: types.CallbackQuery):
    tue = open("table/sat.png", 'rb')
    txt = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—É–±–±–æ—Ç—É:'
    await bot.send_photo(callback_query.from_user.id, tue, caption=txt)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iEvents'))
async def process_iEvents(callback_query: types.CallbackQuery):
    message_text = text(bold('–ú–ï–†–û–ü–†–ò–Ø–¢–ò–Ø üìå'),
                        '\n\n1. –û—á–Ω—ã–π —ç—Ç–∞–ø –æ–ª–∏–º–ø–∏–∞–¥—ã "–ö—Ä–∏—Å—Ç–∞"', italic('\n–ö–æ–≥–¥–∞: –≤ —è–Ω–≤–∞—Ä–µ'))
    await bot.send_message(callback_query.from_user.id, message_text, parse_mode=ParseMode.MARKDOWN)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iBack'))
async def process_iBack(callback_query: types.CallbackQuery):
    await bot.send_message(callback_query.from_user.id, "–ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª(-–∞) —É–∑–Ω–∞—Ç—å?", reply_markup=kb.intex)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iRaspis'))
async def process_iRaspis(callback_query: types.CallbackQuery):
    await bot.send_message(callback_query.from_user.id, "–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏", reply_markup=kb.week)

#–ü–û–õ–ï–ó–ù–´–ï–†–ï–°–£–†–°–´_–ò–ù–¢–ï–•
@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iResources'))
async def process_iResources(callback_query: types.CallbackQuery):
    message_text = text(bold('–ü–û–õ–ï–ó–ù–´–ï –†–ï–°–£–†–°–´ üí°'),
                        '\n\n–ò–ù–¢–ï–†–ù–ï–¢-–†–ï–°–£–†–°–´:',
                        '\nwelcome.stepik.org - –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å—ã –æ—Ç –≤–µ–¥—É—â–∏—Ö –≤—É–∑–æ–≤ –∏ –∫–æ–º–ø–∞–Ω–∏–π —Å—Ç—Ä–∞–Ω—ã',
                        '\nkpolyakov.spb.ru - —Å–∞–π—Ç –ü–æ–ª—è–∫–æ–≤–∞ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ',
                        '\ncodeforces.com - —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è –∏ –æ–ª–∏–º–ø–∏–∞–¥—ã –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ',
                        '\nvsenauka.ru - –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –Ω–∞—É—á–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞'
                        '\nsilvertests.ru - –ø–æ—Ä—Ç–∞–ª –æ–±—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ'
                        '\nege.sdamgia.ru - –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ—Ä—Ç–∞–ª –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º'
                        '\nolimpiada.ru - –≤—Å—ë –æ–± –æ–ª–∏–º–ø–∏–∞–¥–∞—Ö –¥–ª—è —à–∫–æ–ª—å–Ω–∏–∫–æ–≤'
                        '\npostypashki.ru - –ª—É—á—à–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ–ª–∏–º–ø–∏–∞–¥–∞–º, –ï–ì–≠ –∏ –î–í–ò'
                        '\nmathus.ru - –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ: –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ–ª–∏–º–ø–∏–∞–¥–∞–º –∏ –ï–ì–≠'
                        '\n\n–ß–ê–¢-–ë–û–¢–´:'
                        '\n@mybookbot - –ø–æ–∏—Å–∫ –∫–Ω–∏–≥ –ø–æ –≤—Å–µ–º—É –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –Ω–∞ –≤—Å–µ—Ö —è–∑—ã–∫–∞—Ö'
                        '\n@ias16bot - –±–æ—Ç-—É—á–∏—Ç–µ–ª—å —Å–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π'
                        '\n@Wikipedia_voice_bot - –±–æ—Ç —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ ¬´–í–∏–∫–∏–ø–µ–¥–∏–∏¬ª'
                        '\n@AndyRobot - —á–∞—Ç-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤—ã—É—á–∏—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫')
    await bot.send_message(callback_query.from_user.id, message_text, parse_mode=ParseMode.MARKDOWN, reply_markup=kb.intexBack)

#–ï–ì–≠
@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iEGE'))
async def process_iEGE(callback_query: types.CallbackQuery):
    message_text = text(bold('–ü–û–õ–ï–ó–ù–´–ï –†–ï–°–£–†–°–´ –î–õ–Ø –ü–û–î–ì–û–¢–û–í–ö–ò –ö –ï–ì–≠ üí°'),
                        '\n\nege.sdamgia.ru - –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ—Ä—Ç–∞–ª –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º'
                        '\nkpolyakov.spb.ru - —Å–∞–π—Ç –ü–æ–ª—è–∫–æ–≤–∞ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ'
                        '\nfipi.ru - –º–µ—Ç–æ–¥–∏—á–µ—Å–∫–∞—è –∫–æ–ø–∏–ª–∫–∞ –∑–∞–¥–∞–Ω–∏–π –ï–ì–≠'
                        '\nmathege.ru - –æ—Ç–∫—Ä—ã—Ç—ã–π –±–∞–Ω–∫ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á –ï–ì–≠'
                        '\nneznaika.info - –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –ï–ì–≠ –∏ –û–ì–≠'
                        '\nfoxford.ru - –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª–∞'
                        '\nshkolkovo.net - –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ—Ä—Ç–∞–ª –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –ï–ì–≠, –û–ì–≠, –∏ –æ–ª–∏–º–ø–∏–∞–¥–∞–º'
                        '\n4ege.ru - –≤—Å—ë —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –æ –ï–ì–≠'
                        '\nmathus.ru - –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ: –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ–ª–∏–º–ø–∏–∞–¥–∞–º –∏ –ï–ì–≠'
                        '\nhttps://drive.google.com/drive/folders/1SltV0hiMSA4yZsh-HLiv_7bBjMzGIiyZ - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –ï–ì–≠ –ø–æ —Ä—É—Å—Å–∫–æ–º—É —è–∑—ã–∫—É'
                        '\n\n–¢–∞–∫–∂–µ –µ—Å—Ç—å –º–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–æ–≤ –Ω–∞ YouTube. –ù–∞–ø—Ä–∏–º–µ—Ä: '
                        '\n–ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ - –ë–æ—Ä–∏—Å –¢—Ä—É—à–∏–Ω, –ü–∏—Ñ–∞–≥–æ—Ä, –ú–∞—Ç–µ–º–∞—Ç–∏–∫ –ú–ì–£, –®–∫–æ–ª–∫–æ–≤–æ –∏ –¥—Ä.'
                        '\n–ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ - –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫ –ë–£, –®–∫–æ–ª–∫–æ–≤–æ –∏ –¥—Ä.'
                        '\n–ø–æ —Ñ–∏–∑–∏–∫–µ - –ï–ì–≠/–û–ì–≠ –§–∏–∑–∏–∫–∞, –ü–∞–≤–µ–ª –í–ò–ö–¢–û–†, –®–∫–æ–ª–∫–æ–≤–æ –∏ –¥—Ä.'
                        '\n\n–¢–∞–∫–∂–µ –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ–≤–µ—Ä—Å–∏–∏ –ï–ì–≠ 2022:')
    await bot.send_message(callback_query.from_user.id, message_text, reply_markup=kb.egeintex)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iDemoMath'))
async def process_iDemoMath(callback_query: types.CallbackQuery):
    with open('ege/math-demo2022-pro.pdf', 'rb') as document:
        await bot.send_document(callback_query.from_user.id, document)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iDemoInf'))
async def process_iDemoInf(callback_query: types.CallbackQuery):
    with open('ege/inf-demo2022pdf.pdf', 'rb') as document:
        await bot.send_document(callback_query.from_user.id, document)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iDemoPh'))
async def process_iDemoPh(callback_query: types.CallbackQuery):
    with open('ege/fiz-demo2022.pdf', 'rb') as document:
        await bot.send_document(callback_query.from_user.id, document)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iDemoRus'))
async def process_iDemoRus(callback_query: types.CallbackQuery):
    with open('ege/rus-demo2022.pdf', 'rb') as document:
        await bot.send_document(callback_query.from_user.id, document)

#–û–õ–ò–ú–ü–ò–ê–î–´
@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iOlimp'))
async def process_iOlimp(callback_query: types.CallbackQuery):
    message_text = text('–ß—Ç–æ –±—ã –í—ã —Ö–æ—Ç–µ–ª–∏ —É–∑–Ω–∞—Ç—å –æ–± –æ–ª–∏–º–ø–∏–∞–¥–∞—Ö?')
    await bot.send_message(callback_query.from_user.id, message_text, parse_mode=ParseMode.MARKDOWN, reply_markup=kb.olimp)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('pololimp'))
async def process_pololimp(callback_query: types.CallbackQuery):
    message_text =text('‚ùó–£—á–∞—Å—Ç–∏–µ –≤ –æ–ª–∏–º–ø–∏–∞–¥–∞—Ö –¥–∞—ë—Ç –ø—Ä–∞–≤–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –í–£–ó –±–µ–∑ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π –∏–ª–∏ —à–∫–æ–ª—å–Ω–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç 100 –±–∞–ª–ª–æ–≤ –ø–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –æ–ª–∏–º–ø–∏–∞–¥—ã.',
                        bold('\n\n–ü–û–õ–ï–ó–ù–´–ï –†–ï–°–£–†–°–´ –î–õ–Ø –ü–û–î–ì–û–¢–û–í–ö–ò –ö –û–õ–ò–ú–ü–ò–ê–î–ê–ú üí°'),
                        '\nolimpiada.ru - –≤—Å—ë –æ–± –æ–ª–∏–º–ø–∏–∞–¥–∞—Ö –¥–ª—è —à–∫–æ–ª—å–Ω–∏–∫–æ–≤'
                        '\npostypashki.ru - –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ–ª–∏–º–ø–∏–∞–¥–∞–º, –ï–ì–≠ –∏ –î–í–ò'
                        '\nfoxford.ru - –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª–∞'
                        '\nshkolkovo.net - –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ—Ä—Ç–∞–ª –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –ï–ì–≠, –û–ì–≠, –∏ –æ–ª–∏–º–ø–∏–∞–¥–∞–º'
                        '\nmathus.ru - –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ: –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ–ª–∏–º–ø–∏–∞–¥–∞–º –∏ –ï–ì–≠')
    await bot.send_message(callback_query.from_user.id, message_text, parse_mode=ParseMode.MARKDOWN, reply_markup=kb.intexBack)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('soonolimp'))
async def process_pololimp(callback_query: types.CallbackQuery):
    with open('olimp.png', 'rb') as ol:
        txt = '–ë–ª–∏–∂–∞–π—à–∏–µ –æ–ª–∏–º–ø–∏–∞–¥—ã'
        await bot.send_document(callback_query.from_user.id, ol, caption=txt)

#–ü–û–°–¢–£–ü–ê–®–ö–ò
@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iPostup'))
async def process_iPostup(callback_query: types.CallbackQuery):
    message_text = text(bold('–†–ï–°–£–†–°–´ –î–õ–Ø –í–´–ë–û–†–´ –í–£–ó–ê'),
                         '\n\npostupi.online, \nucheba.ru, \nvuzopedia.ru, \ntabiturient.ru',
                         bold('\n\n–¢–û–ü –¢–ï–•–ù–ò–ß–ï–°–ö–ò–• –í–£–ó–û–í'), '\n–ú–ì–£ –∏–º. –õ–æ–º–æ–Ω–æ—Å–æ–≤–∞ - msu.ru', '\n–°–ü–ë–ì–£ - spbu.ru'
                                                                            '\n–ú–§–¢–ò - mipt.ru'
                                                                            '\n–ò–¢–ú–û - itmo.ru'
                                                                            '\n–ú–ê–ò - mai.ru'
                                                                            '\n–ú–ì–¢–£ –∏–º. –ë–∞—É–º–∞–Ω–∞ -bmstu.ru '
                                                                            '\n–ù–ò–Ø–£ –ú–ò–§–ò - mephi.ru'
                                                                            '\n–ù–ò–¢–£ –ú–ò–°–∏–° - misis.ru')
    await bot.send_message(callback_query.from_user.id, message_text, parse_mode=ParseMode.MARKDOWN, reply_markup=kb.intexBack)

#–ù–û–í–û–°–¢–ò
@dp.callback_query_handler(lambda c: c.data and c.data.startswith('News'))
async def News(callback_query: types.CallbackQuery):
    with open('news.json') as f:
        n = json.load(f)
        await bot.send_message(callback_query.from_user.id, '\n'.join(n["news"]))

#
@dp.callback_query_handler(lambda c: c.data and c.data.startswith('iOtkr'))
async def News(callback_query: types.CallbackQuery):
    with open('otkr.jpeg', 'rb') as otkr:
        txt = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ "–û—Ç–∫—Ä—ã—Ç–∏—è" –Ω–∞ 2021-2022 –≥.'
        await bot.send_photo(callback_query.from_user.id, otkr, caption=txt)

#–û –®–ö–û–õ–ï
@dp.callback_query_handler(lambda c: c.data and c.data.startswith('school'))
async def process_school(callback_query: types.CallbackQuery):
    message_text = text(bold('–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –®–ö–û–õ–ï'),
                        '\n\n–ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: \n–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—â–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ –Ø—Ä–æ—Å–ª–∞–≤—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ ¬´–°—Ä–µ–¥–Ω—è—è —à–∫–æ–ª–∞ ¬´–ü—Ä–æ–≤–∏–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–ª–ª–µ–¥–∂¬ª (—Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ - –ì–û–£ –Ø–û –°–® ¬´–ü—Ä–æ–≤–∏–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–ª–ª–µ–¥–∂¬ª)'
                        '\n\n–ê–¥—Ä–µ—Å: –ë–æ–ª—å—à–∞—è –û–∫—Ç—è–±—Ä—å—Å–∫–∞—è —É–ª., 79, –Ø—Ä–æ—Å–ª–∞–≤–ª—å'
                        '\n\n–ö–æ–Ω—Ç–∞–∫—Ç—ã: \n(4852) 30-33-38 (–ø—Ä–∏–µ–º–Ω–∞—è, –¥–∏—Ä–µ–∫—Ç–æ—Ä)'
                        '\n20-12-42 (–¶–µ–Ω—Ç—Ä –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–µ—Ç–µ–π "–û—Ç–∫—Ä—ã—Ç–∏–µ")'
                        '\n48-60-54 (—É—á–∏—Ç–µ–ª—å—Å–∫–∞—è)'
                        '\n21-23-85 (–∑–∞–º.–¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –ø–æ —É—á–µ–±–Ω–æ–π —Ä–∞–±–æ—Ç–µ)'
                        '\n–§–∞–∫—Å: (4852) 30-33-38'
                        '\n\n–ü–æ—á—Ç–∞: yarprovcol@yandex.ru'
                        '\n\n–°–∞–π—Ç: pcollege.edu.yar.ru'
                        '\n\n–¢–∞–∫–∂–µ –í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã —É—á–∏—Ç–µ–ª–µ–π:')
    await bot.send_message(callback_query.from_user.id, message_text, parse_mode=ParseMode.MARKDOWN, reply_markup=kb.kontaktuch_school)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('kontuch'))
async def process_kontuch(callback_query: types.CallbackQuery):
    with open('kontakti_uchiteley.pdf', 'rb') as document:
        await bot.send_document(callback_query.from_user.id, document, parse_mode=ParseMode.MARKDOWN)

#–ù–ï–ò–ó–í–ï–°–¢–ù–ê–Ø –ö–û–ú–ê–ù–î–ê
@dp.message_handler(content_types=ContentType.ANY)
async def unknown_message(msg: types.Message):
    message_text = text('–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç ü§®'
                        '\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è –º–æ–≥—É, –≤—ã–±–µ—Ä–∏ –∫–ª–∞—Å—Å üëâ /grade')
    await msg.reply(message_text)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)